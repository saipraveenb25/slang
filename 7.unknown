@binding(0) @group(0) var<storage, read_write> outputBuffer_0 : array<f32>;

struct AnyValue16
{
     field0_0 : u32,
     field1_0 : u32,
     field2_0 : u32,
     field3_0 : u32,
};

struct DiffPair_float_0
{
    @align(4) primal_0 : f32,
    @align(4) differential_0 : f32,
};

struct B_0
{
    @align(4) data1_0 : i32,
    @align(4) data2_0 : i32,
};

struct DiffPair_B_0
{
    @align(4) primal_0 : B_0,
};

fn unpackAnyValue16_0( _S1 : AnyValue16) -> DiffPair_B_0
{
    var _S2 : DiffPair_B_0;
    _S2.primal_0.data1_0 = bitcast<i32>(_S1.field0_0);
    _S2.primal_0.data2_0 = bitcast<i32>(_S1.field1_0);
    return _S2;
}

fn s_bwd_prop_B_calc_0( dpthis_0 : ptr<function, DiffPair_B_0>,  dpx_0 : ptr<function, DiffPair_float_0>,  _s_dOut_0 : f32)
{
    var _S3 : f32 = (*dpx_0).primal_0 * (f32((*dpthis_0).primal_0.data1_0) * (f32((*dpthis_0).primal_0.data2_0) * _s_dOut_0));
    var _S4 : f32 = _S3 + _S3;
    (*dpx_0).primal_0 = (*dpx_0).primal_0;
    (*dpx_0).differential_0 = _S4;
    (*dpthis_0).primal_0 = (*dpthis_0).primal_0;
    return;
}

fn s_bwd_B_calc_0( _S5 : ptr<function, DiffPair_B_0>,  _S6 : ptr<function, DiffPair_float_0>,  _S7 : f32)
{
    s_bwd_prop_B_calc_0(&((*_S5)), &((*_S6)), _S7);
    return;
}

fn packAnyValue16_0( _S8 : DiffPair_B_0) -> AnyValue16
{
    var _S9 : AnyValue16;
    _S9.field0_0 = u32(0);
    _S9.field1_0 = u32(0);
    _S9.field2_0 = u32(0);
    _S9.field3_0 = u32(0);
    _S9.field0_0 = bitcast<u32>(_S8.primal_0.data1_0);
    _S9.field1_0 = bitcast<u32>(_S8.primal_0.data2_0);
    return _S9;
}

fn s_bwd_B_calc_wtwrapper_0( _S10 : ptr<function, AnyValue16>,  _S11 : ptr<function, DiffPair_float_0>,  _S12 : f32)
{
    var _S13 : DiffPair_B_0 = unpackAnyValue16_0((*_S10));
    s_bwd_B_calc_0(&(_S13), &((*_S11)), _S12);
    (*_S10) = packAnyValue16_0(_S13);
    return;
}

fn s_fwd_B_calc_0( dpthis_1 : DiffPair_B_0,  dpx_1 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S14 : f32 = dpx_1.differential_0 * dpx_1.primal_0;
    var _S15 : f32 = f32(dpthis_1.primal_0.data1_0);
    var _S16 : f32 = f32(dpthis_1.primal_0.data2_0);
    var _S17 : DiffPair_float_0 = DiffPair_float_0( dpx_1.primal_0 * dpx_1.primal_0 * _S15 * _S16, (_S14 + _S14) * _S15 * _S16 );
    return _S17;
}

fn s_fwd_B_calc_wtwrapper_0( _S18 : AnyValue16,  _S19 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S20 : DiffPair_float_0 = s_fwd_B_calc_0(unpackAnyValue16_0(_S18), _S19);
    return _S20;
}

struct A_0
{
    @align(4) data1_1 : i32,
};

struct DiffPair_A_0
{
    @align(4) primal_0 : A_0,
};

fn unpackAnyValue16_1( _S21 : AnyValue16) -> DiffPair_A_0
{
    var _S22 : DiffPair_A_0;
    _S22.primal_0.data1_1 = bitcast<i32>(_S21.field0_0);
    return _S22;
}

fn s_bwd_prop_A_calc_0( dpthis_2 : ptr<function, DiffPair_A_0>,  dpx_2 : ptr<function, DiffPair_float_0>,  _s_dOut_1 : f32)
{
    var _S23 : f32 = (*dpx_2).primal_0;
    var _S24 : f32 = f32((*dpthis_2).primal_0.data1_1) * _s_dOut_1;
    var _S25 : f32 = (*dpx_2).primal_0 * ((*dpx_2).primal_0 * _S24);
    var _S26 : f32 = _S23 * _S23 * _S24 + _S25 + _S25;
    (*dpx_2).primal_0 = (*dpx_2).primal_0;
    (*dpx_2).differential_0 = _S26;
    (*dpthis_2).primal_0 = (*dpthis_2).primal_0;
    return;
}

fn s_bwd_A_calc_0( _S27 : ptr<function, DiffPair_A_0>,  _S28 : ptr<function, DiffPair_float_0>,  _S29 : f32)
{
    s_bwd_prop_A_calc_0(&((*_S27)), &((*_S28)), _S29);
    return;
}

fn packAnyValue16_1( _S30 : DiffPair_A_0) -> AnyValue16
{
    var _S31 : AnyValue16;
    _S31.field0_0 = u32(0);
    _S31.field1_0 = u32(0);
    _S31.field2_0 = u32(0);
    _S31.field3_0 = u32(0);
    _S31.field0_0 = bitcast<u32>(_S30.primal_0.data1_1);
    return _S31;
}

fn s_bwd_A_calc_wtwrapper_0( _S32 : ptr<function, AnyValue16>,  _S33 : ptr<function, DiffPair_float_0>,  _S34 : f32)
{
    var _S35 : DiffPair_A_0 = unpackAnyValue16_1((*_S32));
    s_bwd_A_calc_0(&(_S35), &((*_S33)), _S34);
    (*_S32) = packAnyValue16_1(_S35);
    return;
}

fn s_fwd_A_calc_0( dpthis_3 : DiffPair_A_0,  dpx_3 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S36 : f32 = dpx_3.primal_0 * dpx_3.primal_0;
    var _S37 : f32 = dpx_3.differential_0 * dpx_3.primal_0;
    var _S38 : f32 = f32(dpthis_3.primal_0.data1_1);
    var _S39 : DiffPair_float_0 = DiffPair_float_0( _S36 * dpx_3.primal_0 * _S38, ((_S37 + _S37) * dpx_3.primal_0 + dpx_3.differential_0 * _S36) * _S38 );
    return _S39;
}

fn s_fwd_A_calc_wtwrapper_0( _S40 : AnyValue16,  _S41 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S42 : DiffPair_float_0 = s_fwd_A_calc_0(unpackAnyValue16_1(_S40), _S41);
    return _S42;
}

fn packAnyValue16_2( _S43 : A_0) -> AnyValue16
{
    var _S44 : AnyValue16;
    _S44.field0_0 = u32(0);
    _S44.field1_0 = u32(0);
    _S44.field2_0 = u32(0);
    _S44.field3_0 = u32(0);
    _S44.field0_0 = bitcast<u32>(_S43.data1_1);
    return _S44;
}

fn unpackAnyValue16_2( _S45 : AnyValue16) -> A_0
{
    var _S46 : A_0;
    _S46.data1_1 = bitcast<i32>(_S45.field0_0);
    return _S46;
}

fn A_x24init_0( data1_2 : i32) -> A_0
{
    var _S47 : A_0;
    _S47.data1_1 = data1_2;
    return _S47;
}

fn packAnyValue16_3() -> AnyValue16
{
    var _S48 : AnyValue16;
    _S48.field0_0 = u32(0);
    _S48.field1_0 = u32(0);
    _S48.field2_0 = u32(0);
    _S48.field3_0 = u32(0);
    return _S48;
}

fn U_SR16existential_2Dx11A12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0() -> AnyValue16
{
    return packAnyValue16_3();
}

fn U_SR16existential_2Dx11AR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0() -> AnyValue16
{
    return packAnyValue16_3();
}

fn A_calc_0( this_0 : A_0,  x_0 : f32) -> f32
{
    return x_0 * x_0 * x_0 * f32(this_0.data1_1);
}

fn packAnyValue16_4( _S49 : B_0) -> AnyValue16
{
    var _S50 : AnyValue16;
    _S50.field0_0 = u32(0);
    _S50.field1_0 = u32(0);
    _S50.field2_0 = u32(0);
    _S50.field3_0 = u32(0);
    _S50.field0_0 = bitcast<u32>(_S49.data1_0);
    _S50.field1_0 = bitcast<u32>(_S49.data2_0);
    return _S50;
}

fn unpackAnyValue16_3( _S51 : AnyValue16) -> B_0
{
    var _S52 : B_0;
    _S52.data1_0 = bitcast<i32>(_S51.field0_0);
    _S52.data2_0 = bitcast<i32>(_S51.field1_0);
    return _S52;
}

fn B_x24init_0( data1_3 : i32,  data2_1 : i32) -> B_0
{
    var _S53 : B_0;
    _S53.data1_0 = data1_3;
    _S53.data2_0 = data2_1;
    return _S53;
}

fn packAnyValue16_5() -> AnyValue16
{
    var _S54 : AnyValue16;
    _S54.field0_0 = u32(0);
    _S54.field1_0 = u32(0);
    _S54.field2_0 = u32(0);
    _S54.field3_0 = u32(0);
    return _S54;
}

fn U_SR16existential_2Dx11B12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0() -> AnyValue16
{
    return packAnyValue16_5();
}

fn U_SR16existential_2Dx11BR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0() -> AnyValue16
{
    return packAnyValue16_5();
}

fn B_calc_0( this_1 : B_0,  x_1 : f32) -> f32
{
    return x_1 * x_1 * f32(this_1.data1_0) * f32(this_1.data2_0);
}

struct Tuple_0
{
     value0_0 : vec2<u32>,
     value1_0 : vec2<u32>,
     value2_0 : AnyValue16,
};

fn _S55( _S56 : Tuple_0,  _S57 : f32) -> f32
{
    switch(_S56.value1_0.x)
    {
    case u32(0), :
        {
            var _S58 : f32 = A_calc_0(unpackAnyValue16_2(_S56.value2_0), _S57);
            return _S58;
        }
    case default, :
        {
            var _S59 : f32 = B_calc_0(unpackAnyValue16_3(_S56.value2_0), _S57);
            return _S59;
        }
    }
}

struct NullDifferential_0
{
    @align(4) dummy_0 : u32,
};

fn packAnyValue16_6( _S60 : NullDifferential_0) -> AnyValue16
{
    var _S61 : AnyValue16;
    _S61.field0_0 = u32(0);
    _S61.field1_0 = u32(0);
    _S61.field2_0 = u32(0);
    _S61.field3_0 = u32(0);
    _S61.field0_0 = _S60.dummy_0;
    return _S61;
}

struct DiffPair_IInterface_0
{
     primal_0 : Tuple_0,
     differential_0 : Tuple_0,
};

fn DiffPair_A_makePair_0( _S62 : A_0) -> DiffPair_A_0
{
    var _S63 : DiffPair_A_0 = DiffPair_A_0( _S62 );
    return _S63;
}

fn DiffPair_A_makePair_wtwrapper_0( _S64 : AnyValue16,  _S65 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_1(DiffPair_A_makePair_0(unpackAnyValue16_2(_S64)));
}

fn DiffPair_B_makePair_0( _S66 : B_0) -> DiffPair_B_0
{
    var _S67 : DiffPair_B_0 = DiffPair_B_0( _S66 );
    return _S67;
}

fn DiffPair_B_makePair_wtwrapper_0( _S68 : AnyValue16,  _S69 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_0(DiffPair_B_makePair_0(unpackAnyValue16_3(_S68)));
}

fn _S70( _S71 : vec2<u32>,  _S72 : AnyValue16,  _S73 : AnyValue16) -> AnyValue16
{
    switch(_S71.x)
    {
    case u32(0), :
        {
            return DiffPair_A_makePair_wtwrapper_0(_S72, _S73);
        }
    case default, :
        {
            return DiffPair_B_makePair_wtwrapper_0(_S72, _S73);
        }
    }
}

fn U_SFwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0( _S74 : vec2<u32>,  _S75 : AnyValue16,  _S76 : DiffPair_float_0) -> DiffPair_float_0
{
    switch(_S74.x)
    {
    case u32(0), :
        {
            var _S77 : DiffPair_float_0 = s_fwd_A_calc_wtwrapper_0(_S75, _S76);
            return _S77;
        }
    case default, :
        {
            var _S78 : DiffPair_float_0 = s_fwd_B_calc_wtwrapper_0(_S75, _S76);
            return _S78;
        }
    }
}

fn s_fwd_doThing_0( dpobj_0 : DiffPair_IInterface_0,  dpx_4 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S79 : DiffPair_float_0 = DiffPair_float_0( dpx_4.primal_0, dpx_4.differential_0 );
    var _S80 : DiffPair_float_0 = U_SFwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0(dpobj_0.primal_0.value1_0, _S70(dpobj_0.primal_0.value1_0, dpobj_0.primal_0.value2_0, dpobj_0.differential_0.value2_0), _S79);
    var _S81 : DiffPair_float_0 = DiffPair_float_0( _S80.primal_0, _S80.differential_0 );
    return _S81;
}

fn s_fwd_f_0( id_0 : u32,  dpx_5 : DiffPair_float_0) -> DiffPair_float_0
{
    var obj_0 : Tuple_0;
    var s_diff_obj_0 : Tuple_0;
    if(id_0 == u32(0))
    {
        var _S82 : A_0 = A_x24init_0(i32(2));
        var _S83 : AnyValue16 = packAnyValue16_2(_S82);
        const _S84 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        var _S85 : NullDifferential_0 = NullDifferential_0( u32(0) );
        var _S86 : AnyValue16 = packAnyValue16_6(_S85);
        const _S87 : vec2<u32> = vec2<u32>(u32(4), u32(0));
        obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_0.value1_0 = _S84;
        obj_0.value2_0 = _S83;
        s_diff_obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        s_diff_obj_0.value1_0 = _S87;
        s_diff_obj_0.value2_0 = _S86;
    }
    else
    {
        var _S88 : B_0 = B_x24init_0(i32(2), i32(3));
        var _S89 : AnyValue16 = packAnyValue16_4(_S88);
        const _S90 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        var _S91 : NullDifferential_0 = NullDifferential_0( u32(0) );
        var _S92 : AnyValue16 = packAnyValue16_6(_S91);
        const _S93 : vec2<u32> = vec2<u32>(u32(4), u32(0));
        obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_0.value1_0 = _S90;
        obj_0.value2_0 = _S89;
        s_diff_obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        s_diff_obj_0.value1_0 = _S93;
        s_diff_obj_0.value2_0 = _S92;
    }
    var _S94 : DiffPair_IInterface_0 = DiffPair_IInterface_0( obj_0, s_diff_obj_0 );
    var _S95 : DiffPair_float_0 = DiffPair_float_0( dpx_5.primal_0, dpx_5.differential_0 );
    var _S96 : DiffPair_float_0 = s_fwd_doThing_0(_S94, _S95);
    var _S97 : DiffPair_float_0 = DiffPair_float_0( _S96.primal_0, _S96.differential_0 );
    return _S97;
}

struct s_bwd_prop_f_Intermediates_0
{
    @align(4) _S98 : B_0,
    @align(4) _S99 : A_0,
};

fn s_primal_ctx_doThing_0( dpobj_1 : Tuple_0,  dpx_6 : f32) -> f32
{
    var _S100 : f32 = _S55(dpobj_1, dpx_6);
    return _S100;
}

fn s_primal_ctx_f_0( id_1 : u32,  dpx_7 : f32,  _s_diff_ctx_0 : ptr<function, s_bwd_prop_f_Intermediates_0>) -> f32
{
    var _S101 : B_0 = B_0( i32(0), i32(0) );
    var _S102 : A_0 = A_0( i32(0) );
    (*_s_diff_ctx_0)._S98 = _S101;
    (*_s_diff_ctx_0)._S99 = _S102;
    (*_s_diff_ctx_0)._S98.data1_0 = i32(0);
    (*_s_diff_ctx_0)._S98.data2_0 = i32(0);
    (*_s_diff_ctx_0)._S99.data1_1 = i32(0);
    var obj_1 : Tuple_0;
    if(id_1 == u32(0))
    {
        var _S103 : A_0 = A_x24init_0(i32(2));
        (*_s_diff_ctx_0)._S99 = _S103;
        var _S104 : AnyValue16 = packAnyValue16_2(_S103);
        const _S105 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        obj_1.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_1.value1_0 = _S105;
        obj_1.value2_0 = _S104;
    }
    else
    {
        var _S106 : B_0 = B_x24init_0(i32(2), i32(3));
        (*_s_diff_ctx_0)._S98 = _S106;
        var _S107 : AnyValue16 = packAnyValue16_4(_S106);
        const _S108 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        obj_1.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_1.value1_0 = _S108;
        obj_1.value2_0 = _S107;
    }
    return s_primal_ctx_doThing_0(obj_1, dpx_7);
}

fn U_SR16existential_2Dx110IInterfaceI4core15IDifferentiable_0( _S109 : vec2<u32>) -> vec2<u32>
{
    switch(_S109.x)
    {
    case u32(0), :
        {
            return vec2<u32>(u32(1), u32(0));
        }
    case default, :
        {
            return vec2<u32>(u32(3), u32(0));
        }
    }
}

fn U_S16NullDifferential5dzerop0p16NullDifferentialb_wtwrapper_0() -> AnyValue16
{
    var _S110 : NullDifferential_0 = NullDifferential_0( u32(0) );
    return packAnyValue16_6(_S110);
}

fn U_S4core15IDifferentiable5dzerop0p4core15IDifferentiable12Differential_0( _S111 : vec2<u32>) -> AnyValue16
{
    switch(_S111.x)
    {
    case u32(0), :
        {
            return U_SR16existential_2Dx11A12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0();
        }
    case u32(1), :
        {
            return U_SR16existential_2Dx11AR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0();
        }
    case u32(2), :
        {
            return U_SR16existential_2Dx11B12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0();
        }
    case u32(3), :
        {
            return U_SR16existential_2Dx11BR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0();
        }
    case default, :
        {
            return U_S16NullDifferential5dzerop0p16NullDifferentialb_wtwrapper_0();
        }
    }
}

fn DiffPair_A_makePair_1( _S112 : A_0) -> DiffPair_A_0
{
    var _S113 : DiffPair_A_0 = DiffPair_A_0( _S112 );
    return _S113;
}

fn DiffPair_A_makePair_wtwrapper_1( _S114 : AnyValue16,  _S115 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_1(DiffPair_A_makePair_1(unpackAnyValue16_2(_S114)));
}

fn DiffPair_B_makePair_1( _S116 : B_0) -> DiffPair_B_0
{
    var _S117 : DiffPair_B_0 = DiffPair_B_0( _S116 );
    return _S117;
}

fn DiffPair_B_makePair_wtwrapper_1( _S118 : AnyValue16,  _S119 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_0(DiffPair_B_makePair_1(unpackAnyValue16_3(_S118)));
}

fn _S120( _S121 : vec2<u32>,  _S122 : AnyValue16,  _S123 : AnyValue16) -> AnyValue16
{
    switch(_S121.x)
    {
    case u32(0), :
        {
            return DiffPair_A_makePair_wtwrapper_1(_S122, _S123);
        }
    case default, :
        {
            return DiffPair_B_makePair_wtwrapper_1(_S122, _S123);
        }
    }
}

fn U_SBwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0( _S124 : vec2<u32>,  _S125 : ptr<function, AnyValue16>,  _S126 : ptr<function, DiffPair_float_0>,  _S127 : f32)
{
    switch(_S124.x)
    {
    case u32(0), :
        {
            s_bwd_A_calc_wtwrapper_0(&((*_S125)), &((*_S126)), _S127);
            return;
        }
    case default, :
        {
            s_bwd_B_calc_wtwrapper_0(&((*_S125)), &((*_S126)), _S127);
            return;
        }
    }
}

fn DiffPair_A_getDiff_wtwrapper_0( _S128 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_3();
}

fn DiffPair_B_getDiff_wtwrapper_0( _S129 : AnyValue16) -> AnyValue16
{
    return packAnyValue16_5();
}

fn _S130( _S131 : vec2<u32>,  _S132 : AnyValue16) -> AnyValue16
{
    switch(_S131.x)
    {
    case u32(0), :
        {
            return DiffPair_A_getDiff_wtwrapper_0(_S132);
        }
    case default, :
        {
            return DiffPair_B_getDiff_wtwrapper_0(_S132);
        }
    }
}

fn s_bwd_prop_doThing_0( dpobj_2 : ptr<function, DiffPair_IInterface_0>,  dpx_8 : ptr<function, DiffPair_float_0>,  _s_dOut_2 : f32)
{
    var _S133 : vec2<u32> = U_SR16existential_2Dx110IInterfaceI4core15IDifferentiable_0((*dpobj_2).primal_0.value1_0);
    const _S134 : vec2<u32> = vec2<u32>(u32(0), u32(0));
    var _S135 : AnyValue16 = _S120((*dpobj_2).primal_0.value1_0, (*dpobj_2).primal_0.value2_0, U_S4core15IDifferentiable5dzerop0p4core15IDifferentiable12Differential_0(_S133));
    var _S136 : DiffPair_float_0;
    _S136.primal_0 = (*dpx_8).primal_0;
    _S136.differential_0 = 0.0f;
    U_SBwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0((*dpobj_2).primal_0.value1_0, &(_S135), &(_S136), _s_dOut_2);
    var _S137 : Tuple_0 = Tuple_0( _S134, _S133, _S130((*dpobj_2).primal_0.value1_0, _S135) );
    (*dpx_8).primal_0 = (*dpx_8).primal_0;
    (*dpx_8).differential_0 = _S136.differential_0;
    (*dpobj_2).primal_0 = (*dpobj_2).primal_0;
    (*dpobj_2).differential_0 = _S137;
    return;
}

fn s_bwd_prop_f_0( id_2 : u32,  dpx_9 : ptr<function, DiffPair_float_0>,  _s_dOut_3 : f32,  _s_diff_ctx_1 : s_bwd_prop_f_Intermediates_0)
{
    var _S138 : DiffPair_float_0 = (*dpx_9);
    var obj_2 : Tuple_0;
    if(id_2 == u32(0))
    {
        var _S139 : AnyValue16 = packAnyValue16_2(_s_diff_ctx_1._S99);
        const _S140 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        obj_2.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_2.value1_0 = _S140;
        obj_2.value2_0 = _S139;
    }
    else
    {
        var _S141 : AnyValue16 = packAnyValue16_4(_s_diff_ctx_1._S98);
        const _S142 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        obj_2.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_2.value1_0 = _S142;
        obj_2.value2_0 = _S141;
    }
    var _S143 : NullDifferential_0 = NullDifferential_0( u32(0) );
    var _S144 : Tuple_0 = Tuple_0( vec2<u32>(u32(0), u32(0)), vec2<u32>(u32(4), u32(0)), packAnyValue16_6(_S143) );
    var _S145 : DiffPair_IInterface_0;
    _S145.primal_0 = obj_2;
    _S145.differential_0 = _S144;
    var _S146 : DiffPair_float_0;
    _S146.primal_0 = _S138.primal_0;
    _S146.differential_0 = 0.0f;
    s_bwd_prop_doThing_0(&(_S145), &(_S146), _s_dOut_3);
    (*dpx_9).primal_0 = (*dpx_9).primal_0;
    (*dpx_9).differential_0 = _S146.differential_0;
    return;
}

fn s_bwd_f_0( _S147 : u32,  _S148 : ptr<function, DiffPair_float_0>,  _S149 : f32)
{
    var _S150 : s_bwd_prop_f_Intermediates_0;
    var _S151 : f32 = s_primal_ctx_f_0(_S147, (*_S148).primal_0, &(_S150));
    s_bwd_prop_f_0(_S147, &((*_S148)), _S149, _S150);
    return;
}

@compute
@workgroup_size(1, 1, 1)
fn computeMain(@builtin(global_invocation_id) dispatchThreadID_0 : vec3<u32>)
{
    var _S152 : u32 = dispatchThreadID_0.x;
    var _S153 : DiffPair_float_0 = DiffPair_float_0( 1.0f, 2.0f );
    var _S154 : DiffPair_float_0 = s_fwd_f_0(_S152, _S153);
    outputBuffer_0[i32(0)] = _S154.differential_0;
    var _S155 : u32 = _S152 + u32(1);
    var _S156 : DiffPair_float_0 = DiffPair_float_0( 1.5f, 1.0f );
    var _S157 : DiffPair_float_0 = s_fwd_f_0(_S155, _S156);
    outputBuffer_0[i32(1)] = _S157.differential_0;
    var dpx_10 : DiffPair_float_0;
    dpx_10.primal_0 = 1.0f;
    dpx_10.differential_0 = 0.0f;
    s_bwd_f_0(_S152, &(dpx_10), 2.0f);
    outputBuffer_0[i32(2)] = dpx_10.differential_0;
    var dpx_11 : DiffPair_float_0;
    dpx_11.primal_0 = 1.5f;
    dpx_11.differential_0 = 0.0f;
    s_bwd_f_0(_S155, &(dpx_11), 1.0f);
    outputBuffer_0[i32(3)] = dpx_11.differential_0;
    return;
}

