@binding(0) @group(0) var<storage, read_write> outputBuffer_0 : array<f32>;

struct PathResult_0
{
     thp_0 : f32,
     L_0 : f32,
};

fn PathResult_x24_syn_dzero_0() -> PathResult_0
{
    var result_0 : PathResult_0;
    result_0.thp_0 = 0.0f;
    result_0.L_0 = 0.0f;
    return result_0;
}

fn PathResult_x24_syn_dadd_0( SLANG_anonymous_0_0 : PathResult_0,  SLANG_anonymous_1_0 : PathResult_0) -> PathResult_0
{
    var result_1 : PathResult_0;
    result_1.thp_0 = SLANG_anonymous_0_0.thp_0 + SLANG_anonymous_1_0.thp_0;
    result_1.L_0 = SLANG_anonymous_0_0.L_0 + SLANG_anonymous_1_0.L_0;
    return result_1;
}

struct PathState_0
{
     depth_0 : u32,
     terminated_0 : bool,
};

fn generatePath_0( pathID_0 : u32,  path_0 : ptr<function, PathState_0>)
{
    (*path_0).terminated_0 = false;
    (*path_0).depth_0 = u32(0);
    return;
}

fn PathState_isHit_0( this_0 : PathState_0) -> bool
{
    return !this_0.terminated_0;
}

struct MaterialParam_0
{
     roughness_0 : f32,
};

fn d_getParam_0( id_0 : u32,  diff_0 : MaterialParam_0)
{
    outputBuffer_0[id_0] = outputBuffer_0[id_0] + diff_0.roughness_0;
    return;
}

fn MaterialParam_x24_syn_dzero_0() -> MaterialParam_0
{
    var result_2 : MaterialParam_0;
    result_2.roughness_0 = 0.0f;
    return result_2;
}

fn MaterialParam_x24_syn_dadd_0( SLANG_anonymous_0_1 : MaterialParam_0,  SLANG_anonymous_1_1 : MaterialParam_0) -> MaterialParam_0
{
    var result_3 : MaterialParam_0;
    result_3.roughness_0 = SLANG_anonymous_0_1.roughness_0 + SLANG_anonymous_1_1.roughness_0;
    return result_3;
}

fn getParam_0( id_1 : u32) -> MaterialParam_0
{
    var p_0 : MaterialParam_0;
    p_0.roughness_0 = 0.5f;
    return p_0;
}

fn PathState_isTerminated_0( this_1 : PathState_0) -> bool
{
    return this_1.terminated_0;
}

struct DiffPair_PathResult_0
{
     primal_0 : PathResult_0,
     differential_0 : PathResult_0,
};

struct BSDFSample_0
{
     val_0 : f32,
};

struct s_bwd_prop_updatePathThroughput_Intermediates_0
{
     _S1 : PathResult_0,
};

struct s_bwd_prop_generateScatterRay_Intermediates_0
{
     _S2 : PathResult_0,
     _S3 : s_bwd_prop_updatePathThroughput_Intermediates_0,
};

struct s_bwd_prop_generateScatterRay_Intermediates_1
{
     _S4 : PathResult_0,
     _S5 : PathState_0,
     _S6 : s_bwd_prop_generateScatterRay_Intermediates_0,
};

struct s_bwd_prop_generateScatterRay_Intermediates_2
{
     _S7 : PathResult_0,
     _S8 : PathState_0,
     _S9 : BSDFSample_0,
     _S10 : bool,
     _S11 : s_bwd_prop_generateScatterRay_Intermediates_1,
};

struct s_bwd_prop_handleHit_Intermediates_0
{
     _S12 : PathResult_0,
     _S13 : PathState_0,
     _S14 : MaterialParam_0,
     _S15 : s_bwd_prop_generateScatterRay_Intermediates_2,
     _S16 : f32,
};

struct s_bwd_prop_tracePath_Intermediates_0
{
     _S17 : i32,
     _S18 : array<PathState_0, i32(5)>,
     _S19 : array<PathResult_0, i32(5)>,
     _S20 : array<bool, i32(5)>,
     _S21 : array<PathState_0, i32(5)>,
     _S22 : array<PathResult_0, i32(5)>,
     _S23 : array<s_bwd_prop_handleHit_Intermediates_0, i32(5)>,
     _S24 : array<bool, i32(5)>,
};

fn s_primal_ctx_handleMiss_0( path_1 : ptr<function, PathState_0>,  dprs_0 : ptr<function, PathResult_0>)
{
    var _S25 : PathResult_0 = (*dprs_0);
    var _S26 : PathState_0 = (*path_1);
    var _S27 : PathResult_0 = _S25;
    _S27.L_0 = 0.0f;
    var _S28 : PathState_0 = _S26;
    _S28.terminated_0 = true;
    (*path_1) = _S28;
    (*dprs_0) = _S27;
    return;
}

fn s_primal_ctx_getParam_0( _S29 : u32) -> MaterialParam_0
{
    var _S30 : MaterialParam_0 = getParam_0(_S29);
    return _S30;
}

fn s_primal_ctx_bsdfGGXSample_0( dpbsdfParams_0 : MaterialParam_0,  dpresult_0 : ptr<function, BSDFSample_0>) -> bool
{
    (*dpresult_0).val_0 = dpbsdfParams_0.roughness_0;
    return true;
}

fn s_primal_ctx_updatePathThroughput_0( dppath_0 : ptr<function, PathResult_0>,  dpweight_0 : f32,  _s_diff_ctx_0 : ptr<function, s_bwd_prop_updatePathThroughput_Intermediates_0>)
{
    var _S31 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    (*_s_diff_ctx_0)._S1 = _S31;
    (*_s_diff_ctx_0)._S1.thp_0 = 0.0f;
    (*_s_diff_ctx_0)._S1.L_0 = 0.0f;
    var _S32 : PathResult_0 = (*dppath_0);
    (*_s_diff_ctx_0)._S1 = (*dppath_0);
    var _S33 : f32 = _S32.thp_0 * dpweight_0;
    var _S34 : PathResult_0 = _S32;
    _S34.thp_0 = _S33;
    (*dppath_0) = _S34;
    return;
}

fn s_primal_ctx_generateScatterRay_0( dpbs_0 : BSDFSample_0,  dpbsdfParams_1 : MaterialParam_0,  path_2 : ptr<function, PathState_0>,  dppathRes_0 : ptr<function, PathResult_0>,  _s_diff_ctx_1 : ptr<function, s_bwd_prop_generateScatterRay_Intermediates_0>) -> bool
{
    var _S35 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    var _S36 : s_bwd_prop_updatePathThroughput_Intermediates_0 = s_bwd_prop_updatePathThroughput_Intermediates_0( _S35 );
    (*_s_diff_ctx_1)._S2 = _S35;
    (*_s_diff_ctx_1)._S3 = _S36;
    (*_s_diff_ctx_1)._S2.thp_0 = 0.0f;
    (*_s_diff_ctx_1)._S2.L_0 = 0.0f;
    var _S37 : PathResult_0 = (*dppathRes_0);
    (*_s_diff_ctx_1)._S2 = (*dppathRes_0);
    var _S38 : PathState_0 = (*path_2);
    var _S39 : PathResult_0 = _S37;
    var _S40 : s_bwd_prop_updatePathThroughput_Intermediates_0 = (*_s_diff_ctx_1)._S3;
    s_primal_ctx_updatePathThroughput_0(&(_S39), dpbs_0.val_0, &(_S40));
    (*_s_diff_ctx_1)._S3 = _S40;
    var _S41 : PathResult_0 = _S39;
    (*path_2) = _S38;
    (*dppathRes_0) = _S41;
    return true;
}

fn s_primal_ctx_generateScatterRay_1( dpbs_1 : BSDFSample_0,  dpbsdfParams_2 : MaterialParam_0,  path_3 : ptr<function, PathState_0>,  dppathRes_1 : ptr<function, PathResult_0>,  valid_0 : bool,  _s_diff_ctx_2 : ptr<function, s_bwd_prop_generateScatterRay_Intermediates_1>) -> bool
{
    var _S42 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    var _S43 : PathState_0 = PathState_0( u32(0), false );
    var _S44 : s_bwd_prop_updatePathThroughput_Intermediates_0 = s_bwd_prop_updatePathThroughput_Intermediates_0( _S42 );
    var _S45 : s_bwd_prop_generateScatterRay_Intermediates_0 = s_bwd_prop_generateScatterRay_Intermediates_0( _S42, _S44 );
    (*_s_diff_ctx_2)._S4 = _S42;
    (*_s_diff_ctx_2)._S5 = _S43;
    (*_s_diff_ctx_2)._S6 = _S45;
    (*_s_diff_ctx_2)._S4.thp_0 = 0.0f;
    (*_s_diff_ctx_2)._S4.L_0 = 0.0f;
    (*_s_diff_ctx_2)._S5.depth_0 = u32(0);
    (*_s_diff_ctx_2)._S5.terminated_0 = false;
    var _S46 : PathResult_0 = (*dppathRes_1);
    (*_s_diff_ctx_2)._S4 = (*dppathRes_1);
    var _S47 : PathState_0 = (*path_3);
    (*_s_diff_ctx_2)._S5 = (*path_3);
    var _S48 : bool;
    var _S49 : PathState_0;
    var _S50 : PathResult_0;
    if(valid_0)
    {
        var _S51 : PathState_0 = _S47;
        var _S52 : PathResult_0 = _S46;
        var _S53 : s_bwd_prop_generateScatterRay_Intermediates_0 = (*_s_diff_ctx_2)._S6;
        var _S54 : bool = s_primal_ctx_generateScatterRay_0(dpbs_1, dpbsdfParams_2, &(_S51), &(_S52), &(_S53));
        (*_s_diff_ctx_2)._S6 = _S53;
        var _S55 : PathResult_0 = _S52;
        var _S56 : PathState_0 = _S51;
        _S48 = _S54;
        _S49 = _S56;
        _S50 = _S55;
    }
    else
    {
        _S48 = valid_0;
        _S49 = _S47;
        _S50 = _S46;
    }
    (*path_3) = _S49;
    (*dppathRes_1) = _S50;
    return _S48;
}

fn s_primal_ctx_generateScatterRay_2( dpbsdfParams_3 : MaterialParam_0,  path_4 : ptr<function, PathState_0>,  dppathRes_2 : ptr<function, PathResult_0>,  _s_diff_ctx_3 : ptr<function, s_bwd_prop_generateScatterRay_Intermediates_2>) -> bool
{
    var _S57 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    var _S58 : PathState_0 = PathState_0( u32(0), false );
    var _S59 : BSDFSample_0 = BSDFSample_0( 0.0f );
    var _S60 : s_bwd_prop_updatePathThroughput_Intermediates_0 = s_bwd_prop_updatePathThroughput_Intermediates_0( _S57 );
    var _S61 : s_bwd_prop_generateScatterRay_Intermediates_0 = s_bwd_prop_generateScatterRay_Intermediates_0( _S57, _S60 );
    var _S62 : s_bwd_prop_generateScatterRay_Intermediates_1 = s_bwd_prop_generateScatterRay_Intermediates_1( _S57, _S58, _S61 );
    (*_s_diff_ctx_3)._S7 = _S57;
    (*_s_diff_ctx_3)._S8 = _S58;
    (*_s_diff_ctx_3)._S9 = _S59;
    (*_s_diff_ctx_3)._S10 = false;
    (*_s_diff_ctx_3)._S11 = _S62;
    (*_s_diff_ctx_3)._S7.thp_0 = 0.0f;
    (*_s_diff_ctx_3)._S7.L_0 = 0.0f;
    (*_s_diff_ctx_3)._S8.depth_0 = u32(0);
    (*_s_diff_ctx_3)._S8.terminated_0 = false;
    (*_s_diff_ctx_3)._S9.val_0 = 0.0f;
    (*_s_diff_ctx_3)._S10 = false;
    var _S63 : PathResult_0 = (*dppathRes_2);
    (*_s_diff_ctx_3)._S7 = (*dppathRes_2);
    var _S64 : PathState_0 = (*path_4);
    (*_s_diff_ctx_3)._S8 = (*path_4);
    var _S65 : BSDFSample_0;
    _S65.val_0 = 0.0f;
    var _S66 : bool = s_primal_ctx_bsdfGGXSample_0(dpbsdfParams_3, &(_S65));
    (*_s_diff_ctx_3)._S9 = _S65;
    (*_s_diff_ctx_3)._S10 = _S66;
    var _S67 : BSDFSample_0 = _S65;
    var _S68 : PathState_0 = _S64;
    var _S69 : PathResult_0 = _S63;
    var _S70 : s_bwd_prop_generateScatterRay_Intermediates_1 = (*_s_diff_ctx_3)._S11;
    var _S71 : bool = s_primal_ctx_generateScatterRay_1(_S67, dpbsdfParams_3, &(_S68), &(_S69), _S66, &(_S70));
    (*_s_diff_ctx_3)._S11 = _S70;
    var _S72 : PathResult_0 = _S69;
    var _S73 : PathState_0 = _S68;
    (*path_4) = _S73;
    (*dppathRes_2) = _S72;
    return _S71;
}

fn s_primal_ctx_lightEval_0( depth_1 : u32) -> f32
{
    var _S74 : f32;
    if(depth_1 == u32(1))
    {
        _S74 = 5.0f;
    }
    else
    {
        _S74 = 0.0f;
    }
    return _S74;
}

fn s_primal_ctx_handleHit_0( path_5 : ptr<function, PathState_0>,  dprs_1 : ptr<function, PathResult_0>,  _s_diff_ctx_4 : ptr<function, s_bwd_prop_handleHit_Intermediates_0>)
{
    var _S75 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    var _S76 : PathState_0 = PathState_0( u32(0), false );
    var _S77 : MaterialParam_0 = MaterialParam_0( 0.0f );
    var _S78 : BSDFSample_0 = BSDFSample_0( 0.0f );
    var _S79 : s_bwd_prop_updatePathThroughput_Intermediates_0 = s_bwd_prop_updatePathThroughput_Intermediates_0( _S75 );
    var _S80 : s_bwd_prop_generateScatterRay_Intermediates_0 = s_bwd_prop_generateScatterRay_Intermediates_0( _S75, _S79 );
    var _S81 : s_bwd_prop_generateScatterRay_Intermediates_1 = s_bwd_prop_generateScatterRay_Intermediates_1( _S75, _S76, _S80 );
    var _S82 : s_bwd_prop_generateScatterRay_Intermediates_2 = s_bwd_prop_generateScatterRay_Intermediates_2( _S75, _S76, _S78, false, _S81 );
    (*_s_diff_ctx_4)._S12 = _S75;
    (*_s_diff_ctx_4)._S13 = _S76;
    (*_s_diff_ctx_4)._S14 = _S77;
    (*_s_diff_ctx_4)._S15 = _S82;
    (*_s_diff_ctx_4)._S16 = 0.0f;
    (*_s_diff_ctx_4)._S12.thp_0 = 0.0f;
    (*_s_diff_ctx_4)._S12.L_0 = 0.0f;
    (*_s_diff_ctx_4)._S13.depth_0 = u32(0);
    (*_s_diff_ctx_4)._S13.terminated_0 = false;
    (*_s_diff_ctx_4)._S14.roughness_0 = 0.0f;
    (*_s_diff_ctx_4)._S16 = 0.0f;
    var _S83 : PathResult_0 = (*dprs_1);
    (*_s_diff_ctx_4)._S12 = (*dprs_1);
    var _S84 : PathState_0 = (*path_5);
    (*_s_diff_ctx_4)._S13 = (*path_5);
    var _S85 : MaterialParam_0 = s_primal_ctx_getParam_0(u32(0));
    (*_s_diff_ctx_4)._S14 = _S85;
    var lastVertex_0 : bool = _S85.roughness_0 > 0.80000001192092896f;
    var _S86 : PathState_0;
    if(lastVertex_0)
    {
        _S86 = _S84;
        _S86.terminated_0 = true;
    }
    else
    {
        _S86 = _S84;
    }
    var _S87 : bool = !lastVertex_0;
    var _S88 : PathResult_0;
    if(_S87)
    {
        var _S89 : PathState_0 = _S86;
        var _S90 : PathResult_0 = _S83;
        var _S91 : s_bwd_prop_generateScatterRay_Intermediates_2 = (*_s_diff_ctx_4)._S15;
        var _S92 : bool = s_primal_ctx_generateScatterRay_2(_S85, &(_S89), &(_S90), &(_S91));
        (*_s_diff_ctx_4)._S15 = _S91;
        var _S93 : PathResult_0 = _S90;
        var _S94 : PathState_0 = _S89;
        var _S95 : f32 = s_primal_ctx_lightEval_0(_S94.depth_0);
        (*_s_diff_ctx_4)._S16 = _S95;
        var _S96 : f32 = _S93.thp_0 * _S95;
        _S88 = _S93;
        _S88.L_0 = _S96;
        if(_S94.depth_0 < u32(1))
        {
            _S86 = _S94;
            _S86.terminated_0 = false;
        }
        else
        {
            _S86 = _S94;
            _S86.terminated_0 = true;
        }
    }
    else
    {
        _S88 = _S83;
    }
    (*path_5) = _S86;
    (*dprs_1) = _S88;
    return;
}

fn s_primal_ctx_nextHit_0( path_6 : ptr<function, PathState_0>,  dprs_2 : ptr<function, PathResult_0>)
{
    var _S97 : PathResult_0 = (*dprs_2);
    var _S98 : PathState_0 = (*path_6);
    var _S99 : u32 = _S98.depth_0 + u32(1);
    var _S100 : PathState_0 = _S98;
    _S100.depth_0 = _S99;
    (*path_6) = _S100;
    (*dprs_2) = _S97;
    return;
}

fn s_primal_ctx_tracePath_0( pathID_1 : u32,  path_7 : ptr<function, PathState_0>,  dppathRes_3 : ptr<function, PathResult_0>,  _s_diff_ctx_5 : ptr<function, s_bwd_prop_tracePath_Intermediates_0>) -> bool
{
    var _S101 : PathState_0 = PathState_0( u32(0), false );
    var _S102 : array<PathState_0, i32(5)> = array<PathState_0, i32(5)>( _S101, _S101, _S101, _S101, _S101 );
    var _S103 : PathResult_0 = PathResult_0( 0.0f, 0.0f );
    var _S104 : array<PathResult_0, i32(5)> = array<PathResult_0, i32(5)>( _S103, _S103, _S103, _S103, _S103 );
    var _S105 : array<bool, i32(5)> = array<bool, i32(5)>( false, false, false, false, false );
    var _S106 : MaterialParam_0 = MaterialParam_0( 0.0f );
    var _S107 : BSDFSample_0 = BSDFSample_0( 0.0f );
    var _S108 : s_bwd_prop_updatePathThroughput_Intermediates_0 = s_bwd_prop_updatePathThroughput_Intermediates_0( _S103 );
    var _S109 : s_bwd_prop_generateScatterRay_Intermediates_0 = s_bwd_prop_generateScatterRay_Intermediates_0( _S103, _S108 );
    var _S110 : s_bwd_prop_generateScatterRay_Intermediates_1 = s_bwd_prop_generateScatterRay_Intermediates_1( _S103, _S101, _S109 );
    var _S111 : s_bwd_prop_generateScatterRay_Intermediates_2 = s_bwd_prop_generateScatterRay_Intermediates_2( _S103, _S101, _S107, false, _S110 );
    var _S112 : s_bwd_prop_handleHit_Intermediates_0 = s_bwd_prop_handleHit_Intermediates_0( _S103, _S101, _S106, _S111, 0.0f );
    var _S113 : array<s_bwd_prop_handleHit_Intermediates_0, i32(5)> = array<s_bwd_prop_handleHit_Intermediates_0, i32(5)>( _S112, _S112, _S112, _S112, _S112 );
    (*_s_diff_ctx_5)._S17 = i32(0);
    (*_s_diff_ctx_5)._S18 = _S102;
    (*_s_diff_ctx_5)._S19 = _S104;
    (*_s_diff_ctx_5)._S20 = _S105;
    (*_s_diff_ctx_5)._S21 = _S102;
    (*_s_diff_ctx_5)._S22 = _S104;
    (*_s_diff_ctx_5)._S23 = _S113;
    (*_s_diff_ctx_5)._S24 = _S105;
    (*_s_diff_ctx_5)._S17 = i32(0);
    (*_s_diff_ctx_5)._S18[i32(0)] = _S101;
    (*_s_diff_ctx_5)._S18[i32(1)] = _S101;
    (*_s_diff_ctx_5)._S18[i32(2)] = _S101;
    (*_s_diff_ctx_5)._S18[i32(3)] = _S101;
    (*_s_diff_ctx_5)._S18[i32(4)] = _S101;
    (*_s_diff_ctx_5)._S19[i32(0)] = _S103;
    (*_s_diff_ctx_5)._S19[i32(1)] = _S103;
    (*_s_diff_ctx_5)._S19[i32(2)] = _S103;
    (*_s_diff_ctx_5)._S19[i32(3)] = _S103;
    (*_s_diff_ctx_5)._S19[i32(4)] = _S103;
    (*_s_diff_ctx_5)._S20[i32(0)] = false;
    (*_s_diff_ctx_5)._S20[i32(1)] = false;
    (*_s_diff_ctx_5)._S20[i32(2)] = false;
    (*_s_diff_ctx_5)._S20[i32(3)] = false;
    (*_s_diff_ctx_5)._S20[i32(4)] = false;
    (*_s_diff_ctx_5)._S21[i32(0)] = _S101;
    (*_s_diff_ctx_5)._S21[i32(1)] = _S101;
    (*_s_diff_ctx_5)._S21[i32(2)] = _S101;
    (*_s_diff_ctx_5)._S21[i32(3)] = _S101;
    (*_s_diff_ctx_5)._S21[i32(4)] = _S101;
    (*_s_diff_ctx_5)._S22[i32(0)] = _S103;
    (*_s_diff_ctx_5)._S22[i32(1)] = _S103;
    (*_s_diff_ctx_5)._S22[i32(2)] = _S103;
    (*_s_diff_ctx_5)._S22[i32(3)] = _S103;
    (*_s_diff_ctx_5)._S22[i32(4)] = _S103;
    (*_s_diff_ctx_5)._S23[i32(0)] = _S112;
    (*_s_diff_ctx_5)._S23[i32(1)] = _S112;
    (*_s_diff_ctx_5)._S23[i32(2)] = _S112;
    (*_s_diff_ctx_5)._S23[i32(3)] = _S112;
    (*_s_diff_ctx_5)._S23[i32(4)] = _S112;
    (*_s_diff_ctx_5)._S24[i32(0)] = false;
    (*_s_diff_ctx_5)._S24[i32(1)] = false;
    (*_s_diff_ctx_5)._S24[i32(2)] = false;
    (*_s_diff_ctx_5)._S24[i32(3)] = false;
    (*_s_diff_ctx_5)._S24[i32(4)] = false;
    var _S114 : PathResult_0 = (*dppathRes_3);
    var _S115 : PathState_0;
    _S115.depth_0 = u32(0);
    _S115.terminated_0 = false;
    generatePath_0(pathID_1, &(_S115));
    var _S116 : PathState_0 = _S115;
    var _bflag_0 : bool = true;
    var i_0 : i32 = i32(0);
    var _S117 : PathState_0 = _S116;
    var _S118 : PathResult_0 = _S114;
    var _pc_0 : i32 = i32(0);
    for(;;)
    {
        (*_s_diff_ctx_5)._S17 = _pc_0;
        (*_s_diff_ctx_5)._S18[_pc_0] = _S117;
        (*_s_diff_ctx_5)._S19[_pc_0] = _S118;
        if(_bflag_0)
        {
        }
        else
        {
            break;
        }
        var _S119 : bool = i_0 < i32(3);
        var _bflag_1 : bool;
        var _S120 : i32;
        if(_S119)
        {
            var _S121 : bool = PathState_isHit_0(_S117);
            (*_s_diff_ctx_5)._S20[_pc_0] = _S121;
            var _S122 : PathState_0;
            var _S123 : PathResult_0;
            if(_S121)
            {
                var _S124 : PathState_0 = _S117;
                var _S125 : PathResult_0 = _S118;
                var _S126 : s_bwd_prop_handleHit_Intermediates_0;
                _S126._S12 = _S103;
                _S126._S13 = _S101;
                _S126._S14 = _S106;
                _S126._S15 = _S111;
                _S126._S16 = 0.0f;
                s_primal_ctx_handleHit_0(&(_S124), &(_S125), &(_S126));
                (*_s_diff_ctx_5)._S21[_pc_0] = _S124;
                (*_s_diff_ctx_5)._S22[_pc_0] = _S125;
                (*_s_diff_ctx_5)._S23[_pc_0] = _S126;
                var _S127 : PathResult_0 = _S125;
                var _S128 : PathState_0 = _S124;
                var _S129 : bool = PathState_isTerminated_0(_S128);
                (*_s_diff_ctx_5)._S24[_pc_0] = _S129;
                if(_S129)
                {
                    _bflag_1 = false;
                }
                else
                {
                    _bflag_1 = _S119;
                }
                if(_bflag_1)
                {
                    var _S130 : PathState_0 = _S128;
                    var _S131 : PathResult_0 = _S127;
                    s_primal_ctx_nextHit_0(&(_S130), &(_S131));
                    var _S132 : PathResult_0 = _S131;
                    var _S133 : PathState_0 = _S130;
                    _S122 = _S133;
                    _S123 = _S132;
                }
                else
                {
                    _S122 = _S128;
                    _S123 = _S127;
                }
            }
            else
            {
                var _S134 : PathState_0 = _S117;
                var _S135 : PathResult_0 = _S118;
                s_primal_ctx_handleMiss_0(&(_S134), &(_S135));
                var _S136 : PathResult_0 = _S135;
                var _S137 : PathState_0 = _S134;
                _bflag_1 = _S119;
                _S122 = _S137;
                _S123 = _S136;
            }
            if(_bflag_1)
            {
                _S120 = i32(1);
            }
            else
            {
                _S120 = i32(0);
            }
            _S117 = _S122;
            _S118 = _S123;
        }
        else
        {
            _S120 = i32(0);
        }
        if(_S120 != i32(1))
        {
            _bflag_1 = false;
        }
        else
        {
            _bflag_1 = _bflag_0;
        }
        if(_bflag_1)
        {
            var i_1 : i32 = i_0 + i32(1);
            i_0 = i_1;
        }
        var _S138 : i32 = _pc_0 + i32(1);
        _bflag_0 = _bflag_1;
        _pc_0 = _S138;
    }
    (*path_7) = _S117;
    (*dppathRes_3) = _S118;
    return true;
}

fn s_bwd_prop_handleMiss_0( path_8 : PathState_0,  dprs_3 : ptr<function, DiffPair_PathResult_0>)
{
    var _S139 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S140 : PathResult_0 = PathResult_x24_syn_dadd_0((*dprs_3).differential_0, _S139);
    _S140.L_0 = 0.0f;
    var dprs_4 : PathResult_0 = PathResult_x24_syn_dadd_0(_S140, _S139);
    (*dprs_3).primal_0 = (*dprs_3).primal_0;
    (*dprs_3).differential_0 = dprs_4;
    return;
}

fn s_bwd_prop_nextHit_0( path_9 : PathState_0,  dprs_5 : ptr<function, DiffPair_PathResult_0>)
{
    var _S141 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var dprs_6 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0((*dprs_5).differential_0, _S141), _S141);
    (*dprs_5).primal_0 = (*dprs_5).primal_0;
    (*dprs_5).differential_0 = dprs_6;
    return;
}

struct DiffPair_MaterialParam_0
{
     primal_0 : MaterialParam_0,
     differential_0 : MaterialParam_0,
};

fn BSDFSample_x24_syn_dzero_0() -> BSDFSample_0
{
    var result_4 : BSDFSample_0;
    result_4.val_0 = 0.0f;
    return result_4;
}

struct DiffPair_BSDFSample_0
{
     primal_0 : BSDFSample_0,
     differential_0 : BSDFSample_0,
};

struct DiffPair_float_0
{
     primal_0 : f32,
     differential_0 : f32,
};

fn s_bwd_prop_updatePathThroughput_0( dppath_1 : ptr<function, DiffPair_PathResult_0>,  dpweight_1 : ptr<function, DiffPair_float_0>,  _s_diff_ctx_6 : s_bwd_prop_updatePathThroughput_Intermediates_0)
{
    var _S142 : DiffPair_PathResult_0 = (*dppath_1);
    var _S143 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S144 : PathResult_0 = PathResult_x24_syn_dadd_0((*dppath_1).differential_0, _S143);
    var _S145 : PathResult_0 = _S144;
    _S145.thp_0 = 0.0f;
    var _S146 : f32 = _s_diff_ctx_6._S1.thp_0 * _S144.thp_0;
    var _S147 : f32 = (*dpweight_1).primal_0 * _S144.thp_0;
    var _S148 : PathResult_0 = PathResult_x24_syn_dadd_0(_S145, _S143);
    var _S149 : PathResult_0 = _S143;
    _S149.thp_0 = _S147;
    var dppath_2 : PathResult_0 = PathResult_x24_syn_dadd_0(_S148, _S149);
    (*dpweight_1).primal_0 = (*dpweight_1).primal_0;
    (*dpweight_1).differential_0 = _S146;
    (*dppath_1).primal_0 = _S142.primal_0;
    (*dppath_1).differential_0 = dppath_2;
    return;
}

fn s_bwd_prop_generateScatterRay_0( dpbs_2 : ptr<function, DiffPair_BSDFSample_0>,  dpbsdfParams_4 : ptr<function, DiffPair_MaterialParam_0>,  path_10 : PathState_0,  dppathRes_4 : ptr<function, DiffPair_PathResult_0>,  _s_diff_ctx_7 : s_bwd_prop_generateScatterRay_Intermediates_0)
{
    var _S150 : DiffPair_PathResult_0 = (*dppathRes_4);
    var _S151 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S152 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0((*dppathRes_4).differential_0, _S151), _S151);
    var _S153 : DiffPair_PathResult_0;
    _S153.primal_0 = _s_diff_ctx_7._S2;
    _S153.differential_0 = _S152;
    var _S154 : DiffPair_float_0;
    _S154.primal_0 = (*dpbs_2).primal_0.val_0;
    _S154.differential_0 = 0.0f;
    s_bwd_prop_updatePathThroughput_0(&(_S153), &(_S154), _s_diff_ctx_7._S3);
    var dppathRes_5 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0(_S153.differential_0, _S151), _S151);
    var _S155 : MaterialParam_0 = MaterialParam_x24_syn_dzero_0();
    (*dpbsdfParams_4).primal_0 = (*dpbsdfParams_4).primal_0;
    (*dpbsdfParams_4).differential_0 = _S155;
    var _S156 : BSDFSample_0 = BSDFSample_x24_syn_dzero_0();
    _S156.val_0 = _S154.differential_0;
    (*dpbs_2).primal_0 = (*dpbs_2).primal_0;
    (*dpbs_2).differential_0 = _S156;
    (*dppathRes_4).primal_0 = _S150.primal_0;
    (*dppathRes_4).differential_0 = dppathRes_5;
    return;
}

fn BSDFSample_x24_syn_dadd_0( SLANG_anonymous_0_2 : BSDFSample_0,  SLANG_anonymous_1_2 : BSDFSample_0) -> BSDFSample_0
{
    var result_5 : BSDFSample_0;
    result_5.val_0 = SLANG_anonymous_0_2.val_0 + SLANG_anonymous_1_2.val_0;
    return result_5;
}

fn s_bwd_prop_generateScatterRay_1( dpbs_3 : ptr<function, DiffPair_BSDFSample_0>,  dpbsdfParams_5 : ptr<function, DiffPair_MaterialParam_0>,  path_11 : PathState_0,  dppathRes_6 : ptr<function, DiffPair_PathResult_0>,  valid_1 : bool,  _s_diff_ctx_8 : s_bwd_prop_generateScatterRay_Intermediates_1)
{
    var _S157 : DiffPair_BSDFSample_0 = (*dpbs_3);
    var _S158 : DiffPair_MaterialParam_0 = (*dpbsdfParams_5);
    var _S159 : DiffPair_PathResult_0 = (*dppathRes_6);
    var dppathRes_7 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S160 : PathState_0;
    var dppathRes_8 : PathResult_0;
    if(valid_1)
    {
        _S160 = _s_diff_ctx_8._S5;
        dppathRes_8 = _s_diff_ctx_8._S4;
    }
    else
    {
        _S160.depth_0 = u32(0);
        _S160.terminated_0 = false;
        dppathRes_8.thp_0 = 0.0f;
        dppathRes_8.L_0 = 0.0f;
    }
    var _S161 : BSDFSample_0 = BSDFSample_x24_syn_dzero_0();
    var _S162 : MaterialParam_0 = MaterialParam_x24_syn_dzero_0();
    var _S163 : PathResult_0 = PathResult_x24_syn_dadd_0(_S159.differential_0, dppathRes_7);
    var _S164 : MaterialParam_0;
    var _S165 : BSDFSample_0;
    if(valid_1)
    {
        var _S166 : PathResult_0 = PathResult_x24_syn_dadd_0(_S163, dppathRes_7);
        var _S167 : DiffPair_BSDFSample_0;
        _S167.primal_0 = _S157.primal_0;
        _S167.differential_0 = _S161;
        var _S168 : DiffPair_MaterialParam_0;
        _S168.primal_0 = _S158.primal_0;
        _S168.differential_0 = _S162;
        var _S169 : DiffPair_PathResult_0;
        _S169.primal_0 = dppathRes_8;
        _S169.differential_0 = _S166;
        s_bwd_prop_generateScatterRay_0(&(_S167), &(_S168), _S160, &(_S169), _s_diff_ctx_8._S6);
        var _S170 : MaterialParam_0 = MaterialParam_x24_syn_dadd_0(_S168.differential_0, _S162);
        var _S171 : BSDFSample_0 = BSDFSample_x24_syn_dadd_0(_S167.differential_0, _S161);
        dppathRes_8 = PathResult_x24_syn_dadd_0(_S169.differential_0, dppathRes_7);
        _S164 = _S170;
        _S165 = _S171;
    }
    else
    {
        dppathRes_8 = PathResult_x24_syn_dadd_0(_S163, dppathRes_7);
        _S164 = _S162;
        _S165 = _S161;
    }
    var dppathRes_9 : PathResult_0 = PathResult_x24_syn_dadd_0(dppathRes_7, dppathRes_8);
    (*dpbsdfParams_5).primal_0 = (*dpbsdfParams_5).primal_0;
    (*dpbsdfParams_5).differential_0 = _S164;
    (*dpbs_3).primal_0 = (*dpbs_3).primal_0;
    (*dpbs_3).differential_0 = _S165;
    (*dppathRes_6).primal_0 = _S159.primal_0;
    (*dppathRes_6).differential_0 = dppathRes_9;
    return;
}

fn s_bwd_prop_bsdfGGXSample_0( dpbsdfParams_6 : ptr<function, DiffPair_MaterialParam_0>,  dpresult_1 : BSDFSample_0)
{
    var _S172 : BSDFSample_0 = BSDFSample_x24_syn_dadd_0(dpresult_1, BSDFSample_x24_syn_dzero_0());
    var _S173 : MaterialParam_0 = MaterialParam_x24_syn_dzero_0();
    _S173.roughness_0 = _S172.val_0;
    (*dpbsdfParams_6).primal_0 = (*dpbsdfParams_6).primal_0;
    (*dpbsdfParams_6).differential_0 = _S173;
    return;
}

fn s_bwd_prop_generateScatterRay_2( dpbsdfParams_7 : ptr<function, DiffPair_MaterialParam_0>,  path_12 : PathState_0,  dppathRes_10 : ptr<function, DiffPair_PathResult_0>,  _s_diff_ctx_9 : s_bwd_prop_generateScatterRay_Intermediates_2)
{
    var _S174 : DiffPair_PathResult_0 = (*dppathRes_10);
    var _S175 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S176 : BSDFSample_0 = BSDFSample_x24_syn_dzero_0();
    var _S177 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0((*dppathRes_10).differential_0, _S175), _S175);
    var _S178 : DiffPair_BSDFSample_0;
    _S178.primal_0 = _s_diff_ctx_9._S9;
    _S178.differential_0 = _S176;
    var _S179 : MaterialParam_0 = MaterialParam_x24_syn_dzero_0();
    var _S180 : DiffPair_MaterialParam_0;
    _S180.primal_0 = (*dpbsdfParams_7).primal_0;
    _S180.differential_0 = _S179;
    var _S181 : DiffPair_PathResult_0;
    _S181.primal_0 = _s_diff_ctx_9._S7;
    _S181.differential_0 = _S177;
    s_bwd_prop_generateScatterRay_1(&(_S178), &(_S180), _s_diff_ctx_9._S8, &(_S181), _s_diff_ctx_9._S10, _s_diff_ctx_9._S11);
    var _S182 : BSDFSample_0 = BSDFSample_x24_syn_dadd_0(_S178.differential_0, _S176);
    var _S183 : DiffPair_MaterialParam_0;
    _S183.primal_0 = (*dpbsdfParams_7).primal_0;
    _S183.differential_0 = _S179;
    s_bwd_prop_bsdfGGXSample_0(&(_S183), _S182);
    var dppathRes_11 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0(_S181.differential_0, _S175), _S175);
    var _S184 : MaterialParam_0 = MaterialParam_x24_syn_dadd_0(_S180.differential_0, _S183.differential_0);
    (*dpbsdfParams_7).primal_0 = (*dpbsdfParams_7).primal_0;
    (*dpbsdfParams_7).differential_0 = _S184;
    (*dppathRes_10).primal_0 = _S174.primal_0;
    (*dppathRes_10).differential_0 = dppathRes_11;
    return;
}

fn s_bwd_prop_getParam_0( _S185 : u32,  _S186 : MaterialParam_0)
{
    d_getParam_0(_S185, _S186);
    return;
}

fn s_bwd_prop_handleHit_0( path_13 : PathState_0,  dprs_7 : ptr<function, DiffPair_PathResult_0>,  _s_diff_ctx_10 : s_bwd_prop_handleHit_Intermediates_0)
{
    var _S187 : DiffPair_PathResult_0 = (*dprs_7);
    var dprs_8 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var lastVertex_1 : bool = _s_diff_ctx_10._S14.roughness_0 > 0.80000001192092896f;
    var _S188 : PathState_0;
    if(lastVertex_1)
    {
        _S188 = _s_diff_ctx_10._S13;
        _S188.terminated_0 = true;
    }
    else
    {
        _S188 = _s_diff_ctx_10._S13;
    }
    var _S189 : bool = !lastVertex_1;
    var dprs_9 : PathResult_0;
    if(_S189)
    {
        dprs_9 = _s_diff_ctx_10._S12;
    }
    else
    {
        _S188.depth_0 = u32(0);
        _S188.terminated_0 = false;
        dprs_9.thp_0 = 0.0f;
        dprs_9.L_0 = 0.0f;
    }
    var _S190 : MaterialParam_0 = MaterialParam_x24_syn_dzero_0();
    var _S191 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0(_S187.differential_0, dprs_8), dprs_8);
    var _S192 : MaterialParam_0;
    if(_S189)
    {
        var _S193 : PathResult_0 = PathResult_x24_syn_dadd_0(_S191, dprs_8);
        var _S194 : PathResult_0 = _S193;
        _S194.L_0 = 0.0f;
        var _S195 : f32 = _s_diff_ctx_10._S16 * _S193.L_0;
        var _S196 : PathResult_0 = PathResult_x24_syn_dadd_0(_S194, dprs_8);
        var _S197 : PathResult_0 = dprs_8;
        _S197.thp_0 = _S195;
        var _S198 : PathResult_0 = PathResult_x24_syn_dadd_0(_S196, _S197);
        var _S199 : DiffPair_MaterialParam_0;
        _S199.primal_0 = _s_diff_ctx_10._S14;
        _S199.differential_0 = _S190;
        var _S200 : DiffPair_PathResult_0;
        _S200.primal_0 = dprs_9;
        _S200.differential_0 = _S198;
        s_bwd_prop_generateScatterRay_2(&(_S199), _S188, &(_S200), _s_diff_ctx_10._S15);
        var _S201 : PathResult_0 = PathResult_x24_syn_dadd_0(_S200.differential_0, dprs_8);
        _S192 = MaterialParam_x24_syn_dadd_0(_S199.differential_0, _S190);
        dprs_9 = _S201;
    }
    else
    {
        var _S202 : PathResult_0 = PathResult_x24_syn_dadd_0(_S191, dprs_8);
        _S192 = _S190;
        dprs_9 = _S202;
    }
    var _S203 : MaterialParam_0 = _S190;
    _S203.roughness_0 = 0.0f;
    s_bwd_prop_getParam_0(u32(0), MaterialParam_x24_syn_dadd_0(_S192, _S203));
    var dprs_10 : PathResult_0 = PathResult_x24_syn_dadd_0(dprs_8, dprs_9);
    (*dprs_7).primal_0 = _S187.primal_0;
    (*dprs_7).differential_0 = dprs_10;
    return;
}

fn s_bwd_prop_tracePath_0( pathID_2 : u32,  dppathRes_12 : ptr<function, DiffPair_PathResult_0>,  _s_diff_ctx_11 : s_bwd_prop_tracePath_Intermediates_0)
{
    var _S204 : DiffPair_PathResult_0 = (*dppathRes_12);
    var _S205 : PathResult_0 = PathResult_x24_syn_dzero_0();
    var _S206 : PathResult_0 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0((*dppathRes_12).differential_0, _S205), _S205);
    var _dc_0 : i32 = _s_diff_ctx_11._S17 - i32(1);
    var _S207 : PathResult_0 = _S206;
    var _S208 : PathResult_0 = _S205;
    var _S209 : PathResult_0 = _S205;
    var _S210 : PathResult_0 = _S205;
    var _S211 : PathResult_0 = _S205;
    var _S212 : PathResult_0 = _S205;
    for(;;)
    {
        if(_dc_0 >= i32(0))
        {
        }
        else
        {
            break;
        }
        var _S213 : bool = _dc_0 < i32(3);
        var _S214 : PathResult_0;
        var _S215 : PathResult_0;
        var _S216 : PathResult_0;
        var _bflag_2 : bool;
        var _S217 : PathState_0;
        var _S218 : PathState_0;
        var _S219 : PathState_0;
        if(_S213)
        {
            if(_s_diff_ctx_11._S20[_dc_0])
            {
                var _S220 : i32 = _dc_0;
                var _S221 : i32 = _dc_0;
                var _S222 : i32 = _dc_0;
                var _S223 : i32 = _dc_0;
                if(_s_diff_ctx_11._S24[_dc_0])
                {
                    _bflag_2 = false;
                }
                else
                {
                    _bflag_2 = _S213;
                }
                if(_bflag_2)
                {
                    _S217 = _s_diff_ctx_11._S21[_S223];
                    _S214 = _s_diff_ctx_11._S22[_S222];
                }
                else
                {
                    _S217.depth_0 = u32(0);
                    _S217.terminated_0 = false;
                    _S214.thp_0 = 0.0f;
                    _S214.L_0 = 0.0f;
                }
                var _S224 : PathState_0 = _S217;
                var _S225 : PathResult_0 = _S214;
                _S217.depth_0 = u32(0);
                _S217.terminated_0 = false;
                _S214.thp_0 = 0.0f;
                _S214.L_0 = 0.0f;
                _S218 = _S224;
                _S215 = _S225;
                _S219 = _s_diff_ctx_11._S18[_S220];
                _S216 = _s_diff_ctx_11._S19[_S221];
            }
            else
            {
                _S217 = _s_diff_ctx_11._S18[_dc_0];
                _S214 = _s_diff_ctx_11._S19[_dc_0];
                _bflag_2 = false;
                _S218.depth_0 = u32(0);
                _S218.terminated_0 = false;
                _S215.thp_0 = 0.0f;
                _S215.L_0 = 0.0f;
                _S219.depth_0 = u32(0);
                _S219.terminated_0 = false;
                _S216.thp_0 = 0.0f;
                _S216.L_0 = 0.0f;
            }
        }
        else
        {
            _S217.depth_0 = u32(0);
            _S217.terminated_0 = false;
            _S214.thp_0 = 0.0f;
            _S214.L_0 = 0.0f;
            _bflag_2 = false;
            _S218.depth_0 = u32(0);
            _S218.terminated_0 = false;
            _S215.thp_0 = 0.0f;
            _S215.L_0 = 0.0f;
            _S219.depth_0 = u32(0);
            _S219.terminated_0 = false;
            _S216.thp_0 = 0.0f;
            _S216.L_0 = 0.0f;
        }
        var _S226 : PathResult_0 = PathResult_x24_syn_dadd_0(_S207, _S205);
        if(_S213)
        {
            var _S227 : PathResult_0 = PathResult_x24_syn_dadd_0(_S226, _S208);
            var _S228 : PathResult_0;
            var _S229 : PathResult_0;
            var _S230 : PathResult_0;
            var _S231 : PathResult_0;
            var _S232 : PathResult_0;
            if(_s_diff_ctx_11._S20[_dc_0])
            {
                if(_bflag_2)
                {
                    var _S233 : PathResult_0 = PathResult_x24_syn_dadd_0(_S227, _S211);
                    var _S234 : DiffPair_PathResult_0;
                    _S234.primal_0 = _S215;
                    _S234.differential_0 = _S233;
                    s_bwd_prop_nextHit_0(_S218, &(_S234));
                    _S228 = PathResult_x24_syn_dadd_0(_S234.differential_0, _S205);
                    _S229 = _S205;
                }
                else
                {
                    _S228 = PathResult_x24_syn_dadd_0(_S227, _S210);
                    _S229 = _S211;
                }
                var _S235 : PathResult_0 = PathResult_x24_syn_dadd_0(_S212, _S228);
                var _S236 : DiffPair_PathResult_0;
                _S236.primal_0 = _S216;
                _S236.differential_0 = _S235;
                s_bwd_prop_handleHit_0(_S219, &(_S236), _s_diff_ctx_11._S23[_dc_0]);
                var _S237 : PathResult_0 = _S229;
                _S228 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0(_S236.differential_0, _S205), _S205);
                _S229 = _S209;
                _S230 = _S205;
                _S231 = _S237;
                _S232 = _S205;
            }
            else
            {
                var _S238 : PathResult_0 = PathResult_x24_syn_dadd_0(_S227, _S209);
                var _S239 : DiffPair_PathResult_0;
                _S239.primal_0 = _S214;
                _S239.differential_0 = _S238;
                s_bwd_prop_handleMiss_0(_S217, &(_S239));
                _S228 = PathResult_x24_syn_dadd_0(PathResult_x24_syn_dadd_0(_S239.differential_0, _S205), _S205);
                _S229 = _S205;
                _S230 = _S210;
                _S231 = _S211;
                _S232 = _S212;
            }
            _S207 = _S228;
            _S208 = _S205;
            _S209 = _S229;
            _S210 = _S230;
            _S211 = _S231;
            _S212 = _S232;
        }
        else
        {
            _S207 = PathResult_x24_syn_dadd_0(_S226, _S205);
        }
        _dc_0 = _dc_0 - i32(1);
    }
    var _S240 : PathResult_0 = PathResult_x24_syn_dadd_0(_S207, _S205);
    var _S241 : PathResult_0 = _S205;
    _S241.L_0 = 0.0f;
    _S241.thp_0 = 0.0f;
    var dppathRes_13 : PathResult_0 = PathResult_x24_syn_dadd_0(_S240, _S241);
    (*dppathRes_12).primal_0 = _S204.primal_0;
    (*dppathRes_12).differential_0 = dppathRes_13;
    return;
}

fn s_bwd_tracePath_0( _S242 : u32,  _S243 : ptr<function, DiffPair_PathResult_0>)
{
    var _S244 : PathResult_0 = (*_S243).primal_0;
    var _S245 : PathState_0;
    var _S246 : s_bwd_prop_tracePath_Intermediates_0;
    var _S247 : bool = s_primal_ctx_tracePath_0(_S242, &(_S245), &(_S244), &(_S246));
    s_bwd_prop_tracePath_0(_S242, &((*_S243)), _S246);
    return;
}

@compute
@workgroup_size(1, 1, 1)
fn computeMain(@builtin(global_invocation_id) dispatchThreadID_0 : vec3<u32>)
{
    var pathRes_0 : PathResult_0;
    pathRes_0.L_0 = 1.0f;
    pathRes_0.thp_0 = 1.0f;
    var pathResD_0 : PathResult_0;
    pathResD_0.L_0 = 1.0f;
    pathResD_0.thp_0 = 0.0f;
    var dpx_0 : DiffPair_PathResult_0;
    dpx_0.primal_0 = pathRes_0;
    dpx_0.differential_0 = pathResD_0;
    s_bwd_tracePath_0(u32(1), &(dpx_0));
    return;
}

