@binding(0) @group(0) var<storage, read_write> outputBuffer_0 : array<f32>;

struct AnyValue8
{
     field0_0 : u32,
     field1_0 : u32,
};

struct DiffPair_float_0
{
     primal_0 : f32,
     differential_0 : f32,
};

struct B_0
{
    @align(4) data1_0 : i32,
    @align(4) data2_0 : i32,
};

struct DiffPair_B_0
{
    @align(4) primal_0 : B_0,
};

fn unpackAnyValue8_0( _S1 : AnyValue8) -> DiffPair_B_0
{
    var _S2 : DiffPair_B_0;
    _S2.primal_0.data1_0 = bitcast<i32>(_S1.field0_0);
    _S2.primal_0.data2_0 = bitcast<i32>(_S1.field1_0);
    return _S2;
}

fn s_bwd_prop_B_calc_0( dpthis_0 : ptr<function, DiffPair_B_0>,  dpx_0 : ptr<function, DiffPair_float_0>,  _s_dOut_0 : f32)
{
    var _S3 : f32 = (*dpx_0).primal_0 * (f32((*dpthis_0).primal_0.data1_0) * (f32((*dpthis_0).primal_0.data2_0) * _s_dOut_0));
    var _S4 : f32 = _S3 + _S3;
    (*dpx_0).primal_0 = (*dpx_0).primal_0;
    (*dpx_0).differential_0 = _S4;
    (*dpthis_0).primal_0 = (*dpthis_0).primal_0;
    return;
}

fn s_bwd_B_calc_0( _S5 : ptr<function, DiffPair_B_0>,  _S6 : ptr<function, DiffPair_float_0>,  _S7 : f32)
{
    s_bwd_prop_B_calc_0(&((*_S5)), &((*_S6)), _S7);
    return;
}

fn packAnyValue8_0( _S8 : DiffPair_B_0) -> AnyValue8
{
    var _S9 : AnyValue8;
    _S9.field0_0 = u32(0);
    _S9.field1_0 = u32(0);
    _S9.field0_0 = bitcast<u32>(_S8.primal_0.data1_0);
    _S9.field1_0 = bitcast<u32>(_S8.primal_0.data2_0);
    return _S9;
}

fn s_bwd_B_calc_wtwrapper_0( _S10 : ptr<function, AnyValue8>,  _S11 : ptr<function, DiffPair_float_0>,  _S12 : f32)
{
    var _S13 : DiffPair_B_0 = unpackAnyValue8_0((*_S10));
    s_bwd_B_calc_0(&(_S13), &((*_S11)), _S12);
    (*_S10) = packAnyValue8_0(_S13);
    return;
}

fn s_fwd_B_calc_0( dpthis_1 : DiffPair_B_0,  dpx_1 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S14 : f32 = dpx_1.differential_0 * dpx_1.primal_0;
    var _S15 : f32 = f32(dpthis_1.primal_0.data1_0);
    var _S16 : f32 = f32(dpthis_1.primal_0.data2_0);
    var _S17 : DiffPair_float_0 = DiffPair_float_0( dpx_1.primal_0 * dpx_1.primal_0 * _S15 * _S16, (_S14 + _S14) * _S15 * _S16 );
    return _S17;
}

fn s_fwd_B_calc_wtwrapper_0( _S18 : AnyValue8,  _S19 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S20 : DiffPair_float_0 = s_fwd_B_calc_0(unpackAnyValue8_0(_S18), _S19);
    return _S20;
}

struct A_0
{
    @align(4) data1_1 : i32,
};

struct DiffPair_A_0
{
    @align(4) primal_0 : A_0,
};

fn unpackAnyValue8_1( _S21 : AnyValue8) -> DiffPair_A_0
{
    var _S22 : DiffPair_A_0;
    _S22.primal_0.data1_1 = bitcast<i32>(_S21.field0_0);
    return _S22;
}

fn s_bwd_prop_A_calc_0( dpthis_2 : ptr<function, DiffPair_A_0>,  dpx_2 : ptr<function, DiffPair_float_0>,  _s_dOut_1 : f32)
{
    var _S23 : f32 = (*dpx_2).primal_0;
    var _S24 : f32 = f32((*dpthis_2).primal_0.data1_1) * _s_dOut_1;
    var _S25 : f32 = (*dpx_2).primal_0 * ((*dpx_2).primal_0 * _S24);
    var _S26 : f32 = _S23 * _S23 * _S24 + _S25 + _S25;
    (*dpx_2).primal_0 = (*dpx_2).primal_0;
    (*dpx_2).differential_0 = _S26;
    (*dpthis_2).primal_0 = (*dpthis_2).primal_0;
    return;
}

fn s_bwd_A_calc_0( _S27 : ptr<function, DiffPair_A_0>,  _S28 : ptr<function, DiffPair_float_0>,  _S29 : f32)
{
    s_bwd_prop_A_calc_0(&((*_S27)), &((*_S28)), _S29);
    return;
}

fn packAnyValue8_1( _S30 : DiffPair_A_0) -> AnyValue8
{
    var _S31 : AnyValue8;
    _S31.field0_0 = u32(0);
    _S31.field1_0 = u32(0);
    _S31.field0_0 = bitcast<u32>(_S30.primal_0.data1_1);
    return _S31;
}

fn s_bwd_A_calc_wtwrapper_0( _S32 : ptr<function, AnyValue8>,  _S33 : ptr<function, DiffPair_float_0>,  _S34 : f32)
{
    var _S35 : DiffPair_A_0 = unpackAnyValue8_1((*_S32));
    s_bwd_A_calc_0(&(_S35), &((*_S33)), _S34);
    (*_S32) = packAnyValue8_1(_S35);
    return;
}

fn s_fwd_A_calc_0( dpthis_3 : DiffPair_A_0,  dpx_3 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S36 : f32 = dpx_3.primal_0 * dpx_3.primal_0;
    var _S37 : f32 = dpx_3.differential_0 * dpx_3.primal_0;
    var _S38 : f32 = f32(dpthis_3.primal_0.data1_1);
    var _S39 : DiffPair_float_0 = DiffPair_float_0( _S36 * dpx_3.primal_0 * _S38, ((_S37 + _S37) * dpx_3.primal_0 + dpx_3.differential_0 * _S36) * _S38 );
    return _S39;
}

fn s_fwd_A_calc_wtwrapper_0( _S40 : AnyValue8,  _S41 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S42 : DiffPair_float_0 = s_fwd_A_calc_0(unpackAnyValue8_1(_S40), _S41);
    return _S42;
}

struct AnyValue16
{
     field0_1 : u32,
     field1_1 : u32,
     field2_0 : u32,
     field3_0 : u32,
};

fn packAnyValue16_0( _S43 : A_0) -> AnyValue16
{
    var _S44 : AnyValue16;
    _S44.field0_1 = u32(0);
    _S44.field1_1 = u32(0);
    _S44.field2_0 = u32(0);
    _S44.field3_0 = u32(0);
    _S44.field0_1 = bitcast<u32>(_S43.data1_1);
    return _S44;
}

fn unpackAnyValue16_0( _S45 : AnyValue16) -> A_0
{
    var _S46 : A_0;
    _S46.data1_1 = bitcast<i32>(_S45.field0_1);
    return _S46;
}

fn A_x24init_0( data1_2 : i32) -> A_0
{
    var _S47 : A_0;
    _S47.data1_1 = data1_2;
    return _S47;
}

fn packAnyValue8_2() -> AnyValue8
{
    var _S48 : AnyValue8;
    _S48.field0_0 = u32(0);
    _S48.field1_0 = u32(0);
    return _S48;
}

fn U_SR16existential_2Dx11A12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0() -> AnyValue8
{
    return packAnyValue8_2();
}

fn U_SR16existential_2Dx11AR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0() -> AnyValue8
{
    return packAnyValue8_2();
}

fn A_calc_0( this_0 : A_0,  x_0 : f32) -> f32
{
    return x_0 * x_0 * x_0 * f32(this_0.data1_1);
}

fn packAnyValue16_1( _S49 : B_0) -> AnyValue16
{
    var _S50 : AnyValue16;
    _S50.field0_1 = u32(0);
    _S50.field1_1 = u32(0);
    _S50.field2_0 = u32(0);
    _S50.field3_0 = u32(0);
    _S50.field0_1 = bitcast<u32>(_S49.data1_0);
    _S50.field1_1 = bitcast<u32>(_S49.data2_0);
    return _S50;
}

fn unpackAnyValue16_1( _S51 : AnyValue16) -> B_0
{
    var _S52 : B_0;
    _S52.data1_0 = bitcast<i32>(_S51.field0_1);
    _S52.data2_0 = bitcast<i32>(_S51.field1_1);
    return _S52;
}

fn B_x24init_0( data1_3 : i32,  data2_1 : i32) -> B_0
{
    var _S53 : B_0;
    _S53.data1_0 = data1_3;
    _S53.data2_0 = data2_1;
    return _S53;
}

fn packAnyValue8_3() -> AnyValue8
{
    var _S54 : AnyValue8;
    _S54.field0_0 = u32(0);
    _S54.field1_0 = u32(0);
    return _S54;
}

fn U_SR16existential_2Dx11B12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0() -> AnyValue8
{
    return packAnyValue8_3();
}

fn U_SR16existential_2Dx11BR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0() -> AnyValue8
{
    return packAnyValue8_3();
}

fn B_calc_0( this_1 : B_0,  x_1 : f32) -> f32
{
    return x_1 * x_1 * f32(this_1.data1_0) * f32(this_1.data2_0);
}

struct Tuple_0
{
     value0_0 : vec2<u32>,
     value1_0 : vec2<u32>,
     value2_0 : AnyValue16,
};

struct Tuple_1
{
     value0_1 : vec2<u32>,
     value1_1 : vec2<u32>,
     value2_1 : AnyValue8,
};

struct NullDifferential_0
{
    @align(4) dummy_0 : u32,
};

fn packAnyValue8_4( _S55 : NullDifferential_0) -> AnyValue8
{
    var _S56 : AnyValue8;
    _S56.field0_0 = u32(0);
    _S56.field1_0 = u32(0);
    _S56.field0_0 = _S55.dummy_0;
    return _S56;
}

struct DiffPair_IInterface_0
{
     primal_0 : Tuple_0,
     differential_0 : Tuple_1,
};

fn DiffPair_A_makePair_0( _S57 : A_0) -> DiffPair_A_0
{
    var _S58 : DiffPair_A_0 = DiffPair_A_0( _S57 );
    return _S58;
}

fn DiffPair_A_makePair_wtwrapper_0( _S59 : AnyValue16,  _S60 : AnyValue8) -> AnyValue8
{
    return packAnyValue8_1(DiffPair_A_makePair_0(unpackAnyValue16_0(_S59)));
}

fn DiffPair_B_makePair_0( _S61 : B_0) -> DiffPair_B_0
{
    var _S62 : DiffPair_B_0 = DiffPair_B_0( _S61 );
    return _S62;
}

fn DiffPair_B_makePair_wtwrapper_0( _S63 : AnyValue16,  _S64 : AnyValue8) -> AnyValue8
{
    return packAnyValue8_0(DiffPair_B_makePair_0(unpackAnyValue16_1(_S63)));
}

fn _S65( _S66 : vec2<u32>,  _S67 : AnyValue16,  _S68 : AnyValue8) -> AnyValue8
{
    switch(_S66.x)
    {
    case u32(0), :
        {
            return DiffPair_A_makePair_wtwrapper_0(_S67, _S68);
        }
    case default, :
        {
            return DiffPair_B_makePair_wtwrapper_0(_S67, _S68);
        }
    }
}

fn U_SFwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0( _S69 : vec2<u32>,  _S70 : AnyValue8,  _S71 : DiffPair_float_0) -> DiffPair_float_0
{
    switch(_S69.x)
    {
    case u32(0), :
        {
            var _S72 : DiffPair_float_0 = s_fwd_A_calc_wtwrapper_0(_S70, _S71);
            return _S72;
        }
    case default, :
        {
            var _S73 : DiffPair_float_0 = s_fwd_B_calc_wtwrapper_0(_S70, _S71);
            return _S73;
        }
    }
}

fn s_fwd_doThing_0( dpobj_0 : DiffPair_IInterface_0,  dpx_4 : DiffPair_float_0) -> DiffPair_float_0
{
    var _S74 : DiffPair_float_0 = DiffPair_float_0( dpx_4.primal_0, dpx_4.differential_0 );
    var _S75 : DiffPair_float_0 = U_SFwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0(dpobj_0.primal_0.value1_0, _S65(dpobj_0.primal_0.value1_0, dpobj_0.primal_0.value2_0, dpobj_0.differential_0.value2_1), _S74);
    var _S76 : DiffPair_float_0 = DiffPair_float_0( _S75.primal_0, _S75.differential_0 );
    return _S76;
}

fn s_fwd_f_0( id_0 : u32,  dpx_5 : DiffPair_float_0) -> DiffPair_float_0
{
    var obj_0 : Tuple_0;
    var s_diff_obj_0 : Tuple_1;
    if(id_0 == u32(0))
    {
        var _S77 : A_0 = A_x24init_0(i32(2));
        var _S78 : AnyValue16 = packAnyValue16_0(_S77);
        const _S79 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        var _S80 : NullDifferential_0 = NullDifferential_0( u32(0) );
        var _S81 : AnyValue8 = packAnyValue8_4(_S80);
        const _S82 : vec2<u32> = vec2<u32>(u32(4), u32(0));
        obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_0.value1_0 = _S79;
        obj_0.value2_0 = _S78;
        s_diff_obj_0.value0_1 = vec2<u32>(u32(0), u32(0));
        s_diff_obj_0.value1_1 = _S82;
        s_diff_obj_0.value2_1 = _S81;
    }
    else
    {
        var _S83 : B_0 = B_x24init_0(i32(2), i32(3));
        var _S84 : AnyValue16 = packAnyValue16_1(_S83);
        const _S85 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        var _S86 : NullDifferential_0 = NullDifferential_0( u32(0) );
        var _S87 : AnyValue8 = packAnyValue8_4(_S86);
        const _S88 : vec2<u32> = vec2<u32>(u32(4), u32(0));
        obj_0.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_0.value1_0 = _S85;
        obj_0.value2_0 = _S84;
        s_diff_obj_0.value0_1 = vec2<u32>(u32(0), u32(0));
        s_diff_obj_0.value1_1 = _S88;
        s_diff_obj_0.value2_1 = _S87;
    }
    var _S89 : DiffPair_IInterface_0 = DiffPair_IInterface_0( obj_0, s_diff_obj_0 );
    var _S90 : DiffPair_float_0 = DiffPair_float_0( dpx_5.primal_0, dpx_5.differential_0 );
    var _S91 : DiffPair_float_0 = s_fwd_doThing_0(_S89, _S90);
    var _S92 : DiffPair_float_0 = DiffPair_float_0( _S91.primal_0, _S91.differential_0 );
    return _S92;
}

struct s_bwd_prop_f_Intermediates_0
{
     _S93 : B_0,
     _S94 : A_0,
};

fn _S95( _S96 : Tuple_0,  _S97 : f32) -> f32
{
    switch(_S96.value1_0.x)
    {
    case u32(0), :
        {
            var _S98 : f32 = A_calc_0(unpackAnyValue16_0(_S96.value2_0), _S97);
            return _S98;
        }
    case default, :
        {
            var _S99 : f32 = B_calc_0(unpackAnyValue16_1(_S96.value2_0), _S97);
            return _S99;
        }
    }
}

fn s_primal_ctx_doThing_0( dpobj_1 : Tuple_0,  dpx_6 : f32) -> f32
{
    var _S100 : f32 = _S95(dpobj_1, dpx_6);
    return _S100;
}

fn s_primal_ctx_f_0( id_1 : u32,  dpx_7 : f32,  _s_diff_ctx_0 : ptr<function, s_bwd_prop_f_Intermediates_0>) -> f32
{
    var _S101 : B_0 = B_0( i32(0), i32(0) );
    var _S102 : A_0 = A_0( i32(0) );
    (*_s_diff_ctx_0)._S93 = _S101;
    (*_s_diff_ctx_0)._S94 = _S102;
    (*_s_diff_ctx_0)._S93.data1_0 = i32(0);
    (*_s_diff_ctx_0)._S93.data2_0 = i32(0);
    (*_s_diff_ctx_0)._S94.data1_1 = i32(0);
    var obj_1 : Tuple_0;
    if(id_1 == u32(0))
    {
        var _S103 : A_0 = A_x24init_0(i32(2));
        (*_s_diff_ctx_0)._S94 = _S103;
        var _S104 : AnyValue16 = packAnyValue16_0(_S103);
        const _S105 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        obj_1.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_1.value1_0 = _S105;
        obj_1.value2_0 = _S104;
    }
    else
    {
        var _S106 : B_0 = B_x24init_0(i32(2), i32(3));
        (*_s_diff_ctx_0)._S93 = _S106;
        var _S107 : AnyValue16 = packAnyValue16_1(_S106);
        const _S108 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        obj_1.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_1.value1_0 = _S108;
        obj_1.value2_0 = _S107;
    }
    return s_primal_ctx_doThing_0(obj_1, dpx_7);
}

fn U_SR16existential_2Dx110IInterfaceI4core15IDifferentiable_0( _S109 : vec2<u32>) -> vec2<u32>
{
    switch(_S109.x)
    {
    case u32(0), :
        {
            return vec2<u32>(u32(1), u32(0));
        }
    case default, :
        {
            return vec2<u32>(u32(3), u32(0));
        }
    }
}

fn U_S16NullDifferential5dzerop0p16NullDifferentialb_wtwrapper_0() -> AnyValue8
{
    var _S110 : NullDifferential_0 = NullDifferential_0( u32(0) );
    return packAnyValue8_4(_S110);
}

fn U_S4core15IDifferentiable5dzerop0p4core15IDifferentiable12Differential_0( _S111 : vec2<u32>) -> AnyValue8
{
    switch(_S111.x)
    {
    case u32(0), :
        {
            return U_SR16existential_2Dx11A12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0();
        }
    case u32(1), :
        {
            return U_SR16existential_2Dx11AR18_24x_u_usyn_udzerop0pR16existential_2Dx11A12Differentialb_wtwrapper_0();
        }
    case u32(2), :
        {
            return U_SR16existential_2Dx11B12DifferentialR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0();
        }
    case u32(3), :
        {
            return U_SR16existential_2Dx11BR18_24x_u_usyn_udzerop0pR16existential_2Dx11B12Differentialb_wtwrapper_0();
        }
    case default, :
        {
            return U_S16NullDifferential5dzerop0p16NullDifferentialb_wtwrapper_0();
        }
    }
}

fn U_SBwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0( _S112 : vec2<u32>,  _S113 : ptr<function, AnyValue8>,  _S114 : ptr<function, DiffPair_float_0>,  _S115 : f32)
{
    switch(_S112.x)
    {
    case u32(0), :
        {
            s_bwd_A_calc_wtwrapper_0(&((*_S113)), &((*_S114)), _S115);
            return;
        }
    case default, :
        {
            s_bwd_B_calc_wtwrapper_0(&((*_S113)), &((*_S114)), _S115);
            return;
        }
    }
}

fn DiffPair_A_getDiff_wtwrapper_0( _S116 : AnyValue8) -> AnyValue8
{
    return packAnyValue8_2();
}

fn DiffPair_B_getDiff_wtwrapper_0( _S117 : AnyValue8) -> AnyValue8
{
    return packAnyValue8_3();
}

fn _S118( _S119 : vec2<u32>,  _S120 : AnyValue8) -> AnyValue8
{
    switch(_S119.x)
    {
    case u32(0), :
        {
            return DiffPair_A_getDiff_wtwrapper_0(_S120);
        }
    case default, :
        {
            return DiffPair_B_getDiff_wtwrapper_0(_S120);
        }
    }
}

fn s_bwd_prop_doThing_0( dpobj_2 : ptr<function, DiffPair_IInterface_0>,  dpx_8 : ptr<function, DiffPair_float_0>,  _s_dOut_2 : f32)
{
    var _S121 : vec2<u32> = U_SR16existential_2Dx110IInterfaceI4core15IDifferentiable_0((*dpobj_2).primal_0.value1_0);
    const _S122 : vec2<u32> = vec2<u32>(u32(0), u32(0));
    var _S123 : AnyValue8 = _S65((*dpobj_2).primal_0.value1_0, (*dpobj_2).primal_0.value2_0, U_S4core15IDifferentiable5dzerop0p4core15IDifferentiable12Differential_0(_S121));
    var _S124 : DiffPair_float_0;
    _S124.primal_0 = (*dpx_8).primal_0;
    _S124.differential_0 = 0.0f;
    U_SBwdReq_R16existential_2Dx110IInterface4calcp1pi_ffb_0((*dpobj_2).primal_0.value1_0, &(_S123), &(_S124), _s_dOut_2);
    var _S125 : Tuple_1 = Tuple_1( _S122, _S121, _S118((*dpobj_2).primal_0.value1_0, _S123) );
    (*dpx_8).primal_0 = (*dpx_8).primal_0;
    (*dpx_8).differential_0 = _S124.differential_0;
    (*dpobj_2).primal_0 = (*dpobj_2).primal_0;
    (*dpobj_2).differential_0 = _S125;
    return;
}

fn s_bwd_prop_f_0( id_2 : u32,  dpx_9 : ptr<function, DiffPair_float_0>,  _s_dOut_3 : f32,  _s_diff_ctx_1 : s_bwd_prop_f_Intermediates_0)
{
    var _S126 : DiffPair_float_0 = (*dpx_9);
    var obj_2 : Tuple_0;
    if(id_2 == u32(0))
    {
        var _S127 : AnyValue16 = packAnyValue16_0(_s_diff_ctx_1._S94);
        const _S128 : vec2<u32> = vec2<u32>(u32(0), u32(0));
        obj_2.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_2.value1_0 = _S128;
        obj_2.value2_0 = _S127;
    }
    else
    {
        var _S129 : AnyValue16 = packAnyValue16_1(_s_diff_ctx_1._S93);
        const _S130 : vec2<u32> = vec2<u32>(u32(1), u32(0));
        obj_2.value0_0 = vec2<u32>(u32(0), u32(0));
        obj_2.value1_0 = _S130;
        obj_2.value2_0 = _S129;
    }
    var _S131 : NullDifferential_0 = NullDifferential_0( u32(0) );
    var _S132 : Tuple_1 = Tuple_1( vec2<u32>(u32(0), u32(0)), vec2<u32>(u32(4), u32(0)), packAnyValue8_4(_S131) );
    var _S133 : DiffPair_IInterface_0;
    _S133.primal_0 = obj_2;
    _S133.differential_0 = _S132;
    var _S134 : DiffPair_float_0;
    _S134.primal_0 = _S126.primal_0;
    _S134.differential_0 = 0.0f;
    s_bwd_prop_doThing_0(&(_S133), &(_S134), _s_dOut_3);
    (*dpx_9).primal_0 = (*dpx_9).primal_0;
    (*dpx_9).differential_0 = _S134.differential_0;
    return;
}

fn s_bwd_f_0( _S135 : u32,  _S136 : ptr<function, DiffPair_float_0>,  _S137 : f32)
{
    var _S138 : s_bwd_prop_f_Intermediates_0;
    var _S139 : f32 = s_primal_ctx_f_0(_S135, (*_S136).primal_0, &(_S138));
    s_bwd_prop_f_0(_S135, &((*_S136)), _S137, _S138);
    return;
}

@compute
@workgroup_size(1, 1, 1)
fn computeMain(@builtin(global_invocation_id) dispatchThreadID_0 : vec3<u32>)
{
    var _S140 : u32 = dispatchThreadID_0.x;
    var _S141 : DiffPair_float_0 = DiffPair_float_0( 1.0f, 2.0f );
    var _S142 : DiffPair_float_0 = s_fwd_f_0(_S140, _S141);
    outputBuffer_0[i32(0)] = _S142.differential_0;
    var _S143 : u32 = _S140 + u32(1);
    var _S144 : DiffPair_float_0 = DiffPair_float_0( 1.5f, 1.0f );
    var _S145 : DiffPair_float_0 = s_fwd_f_0(_S143, _S144);
    outputBuffer_0[i32(1)] = _S145.differential_0;
    var dpx_10 : DiffPair_float_0;
    dpx_10.primal_0 = 1.0f;
    dpx_10.differential_0 = 0.0f;
    s_bwd_f_0(_S140, &(dpx_10), 2.0f);
    outputBuffer_0[i32(2)] = dpx_10.differential_0;
    var dpx_11 : DiffPair_float_0;
    dpx_11.primal_0 = 1.5f;
    dpx_11.differential_0 = 0.0f;
    s_bwd_f_0(_S143, &(dpx_11), 1.0f);
    outputBuffer_0[i32(3)] = dpx_11.differential_0;
    return;
}

